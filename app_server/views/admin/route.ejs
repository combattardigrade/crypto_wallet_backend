<%- include('header'); -%>

<div class="page-wrapper">
    <div class="page-content">
        <nav class="page-breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Ruta</a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= route.name %></li>
            </ol>
        </nav>
        <div class="row">
            <div class="col-md-4 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title">Ruta</h6>

                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Campo</th>
                                        <th>Valor</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="font-weight: bold;">ID: </td>
                                        <td><%= route.id %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Nombre: </td>
                                        <td><%= route.name %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Descripción: </td>
                                        <td><%= route.description %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Creada por: </td>
                                        <td><%= route.createdByUserId %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Asignada a: </td>
                                        <td><%= route.user.username %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Estado: </td>
                                        <td><%= route.status %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Fecha de creación: </td>
                                        <td><%= route.createdAt  %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Fecha de última modificación: </td>
                                        <td><%= route.updatedAt  %></td>
                                    </tr>
                                    <tr>
                                        <td style="font-weight: bold;">Agregar Punto de Control: </td>
                                        <td><a href="<%= host %>admin/addCheckpoint/<%= route.id %>" class="btn btn-primary mr-2">Agregar</a></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title">Ruta: <span class="route_name"><%= route.name %></span> </h6>

                        <div id="map" style="width: 100%; height: 80%; min-height: 400px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title">Puntos de Control </h6>

                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Nombre</th>
                                        <th>Descripción</th>
                                        <th>Método</th>
                                        <th>Código</th>
                                        <th>Estado</th>
                                        <th>Fecha de creación</th>
                                        <th>Editar</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if(typeof route != 'undefined' && 'checkpoints' in route && route.checkpoints.length > 0) { 
                                        for(let checkpoint of route.checkpoints) {
                                    %>
                                    <tr>
                                        <td><%= checkpoint.id %></td>
                                        <td><%= checkpoint.name %></td>
                                        <td><%= checkpoint.description %></td>
                                        <td><%= checkpoint.method %></td>
                                        <td><%= checkpoint.code %></td>
                                        <td><%= checkpoint.status %></td>
                                        <td><%= checkpoint.createdAt %></td>
                                        <td><%= checkpoint.updatedAt %></td>
                                        <td><a href="<%= host %>admin/checkpoint/<%= checkpoint.id %>"
                                                class="btn btn-primary mr-2">Ver / Editar</button></td>
                                    </tr>
                                    <% } }%>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

</div>
<script src="<%= host %>assets/bundle.js"></script>
<script>

    const markersArray = []
    const host = `<%= host %>`

    function loadData() {
        App.token = "<%= token %>";
        const routeId = `<%= route.id %>`;
        const guardId = `<%= route.userId %>`;
        clearOverlays()
        App.fetchLastUserLocation(guardId)
            .then((guardLocation) => {
                console.log(guardLocation)
                const image = {
                    url: `${host}/assets/images/guard_location.png`,
                    scaledSize: new google.maps.Size(40, 40), // scaled size
                    origin: new google.maps.Point(0, 0), // origin
                    anchor: new google.maps.Point(0, 0) // anchor
                }
                let guardMarker = new google.maps.Marker({
                    position: { lat: parseFloat(guardLocation.payload.lat), lng: parseFloat(guardLocation.payload.lng) },
                    map: App.map,
                    icon: image
                })

                markersArray.push(guardMarker)
            })
        App.fetchRoute(routeId)
            .then((route) => {
                console.log(route)

                if ('checkpoints' in route.payload && route.payload.checkpoints.length > 0) {
                    for (let checkpoint of route.payload.checkpoints) {

                        let marker = new google.maps.Marker({
                            position: { lat: parseFloat(checkpoint.lat), lng: parseFloat(checkpoint.lng) },
                            map: App.map,
                            label: {
                                text: checkpoint.name.toString(),
                                color: checkpoint.status == 'ACTIVE' ? '#ff0000' : '#007bff',
                                fontWeight: 'bold',
                                paddingTop: "20px",
                                background: 'black'
                            },
                            icon: checkpoint.status == 'ACTIVE' ? pinSymbol('#ff0000') : pinSymbol('#007bff')
                        })

                        markersArray.push(marker)

                        const infowindow = new google.maps.InfoWindow({
                            content: `<div>Nombre: <span>${checkpoint.name}</span></div><div>Estado: <span>${checkpoint.status}</span></div>`
                        });

                        marker.addListener('click', function () {
                            infowindow.open(App.map, marker);
                        })
                    }
                }
            })
        setTimeout(loadData, 5000)
    }

    function initMap() {
        const route = JSON.parse(`<%- JSON.stringify(route) %>`);
        
        App.map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: <%= 'checkpoints' in route && route.checkpoints.length > 0 ? route.checkpoints[0].lat : 0 %>, lng: <%= 'checkpoints' in route && route.checkpoints.length > 0 ? route.checkpoints[0].lng : 0 %> },
            zoom: 15,
            styles: [{
                featureType: 'poi',
                elementType: 'labels.icon',
                stylers: [{ visibility: 'off' }] // hide poi (businesses) icons
            },
            {
                featureType: 'poi',
                elementType: 'geometry',
                stylers: [{ color: '#e5e5e5' }] // poi geometry color
            },
            {
                featureType: 'poi.park',
                elementType: 'labels.text.stroke',
                stylers: [{ color: '#ffffff' }] // hide local businesses labels
            },
            {
                featureType: 'poi.park',
                elementType: 'labels.text.fill',
                stylers: [{ color: '#676767' }] // hide local businesses labels
            },
            {
                featureType: 'landscape',
                elementType: 'geometry',
                stylers: [{ color: '#f5f5f5' }] // buildings and so on
            },
            {
                featureType: 'road.arterial',
                elementType: 'labels',
                stylers: [{ visibility: 'off' }] // hide arterial roads labels
            },
            {
                featureType: 'road.highway',
                elementType: 'geometry', // highway color
                stylers: [{ color: '#dadada' }]
            },
            {
                featureType: 'road.highway',
                elementType: 'labels.text.stroke', // highway label text stroke (contorno)
                stylers: [{ color: '#ffffff' }]
            },
            {
                featureType: 'road',
                elementType: 'labels.text.fill', // rad label text color (fill)
                stylers: [{ color: '#676767' }]
            },
            {
                featureType: 'road.local',
                elementType: 'geometry',
                stylers: [{ color: '#ffffff' }] // park roads color

            },
            {
                featureType: 'transit',
                elementType: 'labels.icon',
                stylers: [{ visibility: 'off' }]
            },
            {
                featureType: 'transit',
                elementType: 'labels.text.fill',
                stylers: [{ color: '#676767' }]
            },
            {
                featureType: 'transit',
                elementType: 'labels.text.stroke',
                stylers: [{ color: '#ffffff' }]
            },
            {
                featureType: 'transit.station.bus',
                elementType: 'labels.icon',
                stylers: [{ visibility: 'off' }]
            }]
        });


        loadData()
    }
    function pinSymbol(color) {
        return {
            path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z M -2,-30 a 2,2 0 1,1 4,0 2,2 0 1,1 -4,0',
            fillColor: color,
            fillOpacity: 1,
            strokeColor: '#ffffff',
            strokeWeight: 1,
            scale: 1,
        };
    }
    function clearOverlays() {
        for (var i = 0; i < markersArray.length; i++) {
            markersArray[i].setMap(null);
        }
        markersArray.length = 0;
    }

</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAY5scI2sYPDGoLn2INfct1gMw5gFLIHjs&callback=initMap"></script>
<%- include('footer'); -%>